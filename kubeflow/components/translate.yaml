name: Translate
description: |
  Translate dataset using NMT
inputs:
  - {name: image, description: ''}
  - {name: project, description: ''}
  - {name: owner, description: ''}
  - {name: experiment, description: ''}
  - {name: s3_bucket, description: ''}
  - {name: model_name_or_path, description: ''}
  - {name: input_splits, description: ''}
  - {name: train_output_per_example, description: ''}
  - {name: nmt, description: ''}
  - {name: do_alignment, description: ''}
  - {name: src_lang, description: ''}
  - {name: tgt_lang, description: ''}
  - {name: dlg_side, description: ''}
  - {name: prepare_for_translation, description: ''}
  - {name: do_translation, description: ''}
  - {name: post_process_translation, description: ''}
  - {name: task_name, description: ''}
  - {name: s3_datadir, description: ''}
  - {name: additional_args, description: ''}
outputs:

implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c 
    - |
      . /opt/genie-toolkit/lib.sh

      parse_args "$0" "image owner project experiment s3_bucket model_name_or_path input_splits train_output_per_example nmt do_alignment src_lang tgt_lang dlg_side prepare_for_translation do_translation post_process_translation task_name s3_datadir" "$@"
      shift $n

      . /opt/genie-toolkit/sync-repos.sh

      cd $HOME

      if [ -f workdir/Makefile ] ; then
        MAKEDIR='.'
      else
        MAKEDIR=${project}
      fi

      cd workdir/${MAKEDIR}

      export translation_arguments="$@"

      aws s3 cp s3://${s3_bucket}/mehrad/extras/gt-json/multilanguage-a40fe9320f88.json ./gt-json/multilanguage-a40fe9320f88.json

      aws s3 sync --no-progress ${s3_datadir} dataset/${experiment}/ --exclude '*/*'
      aws s3 sync --no-progress ${s3_datadir} ${experiment}/ --exclude '*' --include 'translated/en/*' --include "translated/marian/${tgt_lang}/*" --include "translated/gt/${tgt_lang}/*"

      mv ${experiment}/translated/* ${experiment}/
      rm -rf ${experiment}/translated

      IFS='+'; read -ra input_splits_array <<<"$input_splits"; IFS=' '

      # prepare for translation
      if ${prepare_for_translation}; then
        make -B -j2 geniedir=/opt/genie-toolkit all_names="${input_splits_array[*]}" experiment=${experiment} process_data
        aws s3 sync --no-progress ./${experiment}/en/ ${s3_datadir}translated/en/
      fi

      # translate
      if ${do_translation}; then
        case ${nmt}+${do_alignment} in
          marian+true)
            make -B -j2 geniedir=/opt/genie-toolkit \
              default_translation_hparams="${translation_arguments} --tgt_lang ${tgt_lang} --model_name_or_path ${model_name_or_path} --replace_qp --force_replace_qp" \
              all_names="${input_splits_array[*]}" experiment=${experiment} train_output_per_example=${train_output_per_example} skip_translation=false ${experiment}/marian/${tgt_lang}/unquoted-qpis-translated
          ;;
          marian+false)
            make -B -j2 geniedir=/opt/genie-toolkit \
              default_translation_hparams="${translation_arguments} --tgt_lang ${tgt_lang} --model_name_or_path ${model_name_or_path}" \
              all_names="${input_splits_array[*]}" experiment=${experiment} train_output_per_example=${train_output_per_example} skip_translation=false ${experiment}/marian/${tgt_lang}/unquoted-qpis-direct-translated
          ;;
          gt+true)
            make -B -j2 geniedir=/opt/genie-toolkit all_names="${input_splits_array[*]}" experiment=${experiment} gt_project_id="multilanguage-273819" gt_project_number="211743822806" gt_credential_file="gt-json/multilanguage-a40fe9320f88.json" train_output_per_example=${train_output_per_example} skip_translation=false ${experiment}/gt/${tgt_lang}/quoted-qpis-translated
          ;;
          gt+false)
            make -B -j2 geniedir=/opt/genie-toolkit all_names="${input_splits_array[*]}" experiment=${experiment} gt_project_id="multilanguage-273819" gt_project_number="211743822806" gt_credential_file="gt-json/multilanguage-a40fe9320f88.json" train_output_per_example=${train_output_per_example} skip_translation=false ${experiment}/gt/${tgt_lang}/unquoted-qpis-direct-translated
          ;;
          *)
            echo "Not a valid nmt model"
          ;;
          esac

        aws s3 sync --no-progress ./${experiment}/${nmt}/${tgt_lang} ${s3_datadir}translated/${nmt}/${tgt_lang}
      fi

      # further process the translated files
      if ${post_process_translation}; then
        # TODO add alignment option
        if [ ${nmt} == "marian" ] ; then
          make -B -j2 geniedir=/opt/genie-toolkit all_names="${input_splits_array[*]}" experiment=${experiment} train_output_per_example=${train_output_per_example} skip_translation=true translate_marian_unquoted_${tgt_lang}
        elif [ ${nmt} == "gt" ] ; then
          make -B -j2 geniedir=/opt/genie-toolkit all_names="${input_splits_array[*]}" gt_project_id="multilanguage-273819" gt_project_number="211743822806" gt_credential_file="gt-json/multilanguage-a40fe9320f88.json" experiment=${experiment} train_output_per_example=${train_output_per_example} skip_translation=true translate_gt_quoted_${tgt_lang}
        fi
        aws s3 sync --no-progress ./${experiment}/${nmt}/${tgt_lang} ${s3_datadir}translated/${nmt}/${tgt_lang}
      fi

    args: [
      'cmd',
      --image, {inputValue: image},
      --owner, {inputValue: owner},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --s3_bucket, {inputValue: s3_bucket},
      --model_name_or_path, {inputValue: model_name_or_path},
      --input_splits, {inputValue: input_splits},
      --train_output_per_example, {inputValue: train_output_per_example},
      --nmt, {inputValue: nmt},
      --do_alignment, {inputValue: do_alignment},
      --src_lang, {inputValue: src_lang},
      --tgt_lang, {inputValue: tgt_lang},
      --dlg_side, {inputValue: dlg_side},
      --prepare_for_translation, {inputValue: prepare_for_translation},
      --do_translation, {inputValue: do_translation},
      --post_process_translation, {inputValue: post_process_translation},
      --task_name, {inputValue: task_name},
      --s3_datadir, {inputValue: s3_datadir},
      --, {inputValue: additional_args}
    ]
