name: Eval
description: |
  Evaluate
inputs:
  - {name: image, description: '', default: ''}
  - {name: project, description: '', default: ''}
  - {name: experiment, description: '', default: ''}
  - {name: model, description: '', default: ''}
  - {name: model_owner, description: '', default: ''}
  - {name: eval_set, description: '', default: ''}
  - {name: eval_version, description: '', default: ''}
  - {name: s3_model_dir, description: '', default: ''}
  - {name: additional_args, description: '', default: ''}
outputs:
  - {name: output_file}
  - {name: MLPipeline UI metadata, type: UI metadata}
  - {name: MLPipeline Metrics, type: Metrics}
implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c 
    - |
      . /opt/genie-toolkit/lib.sh
      parse_args "$0" "image project experiment model model_owner eval_set eval_version s3_model_dir output_file" "$@"
      shift $n
      cd $HOME
      pwd
      /opt/genie-toolkit/sync-repos.sh
      MAKEDIR=`get_make_dir ${project}`
      cd workdir/${MAKEDIR}

      ls -al 
      mkdir tmp
      MODEL_DIR=${model_owner}/${model}
      mkdir -p $MODEL_DIR
      echo aws s3 sync ${s3_model_dir} ${MODEL_DIR}/

      export TZ=America/Los_Angeles
      # make geniedir=/opt/genie-toolkit thingpedia_cli=thingpedia experiment=$experiment eval_set=${eval_set} eval_version=${eval_version} model=${MODEL_DIR} evaluate
      mkdir -p eval/main/dev/jgd5
      mkdir -p /tmp/a
      aws s3 cp --recursive s3://geniehai/jgd5/workdir/almond/eval/main/dev/jgd5  eval/main/dev/jgd5
      make geniedir=/opt/genie-toolkit thingpedia_cli=thingpedia experiment=$experiment eval_set=${eval_set} \
        eval_version=${eval_version} model=${MODEL_DIR} artifacts_path=${output_file} evaluate-output-artifacts

    args: [
      'cmd',
      --image, {inputValue: image},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --model, {inputValue: model},
      --model_owner, {inputValue: model_owner},      
      --eval_set, {inputValue: eval_set},
      --eval_version, {inputValue: eval_version},
      --s3_model_dir, {inputValue: s3_model_dir},
      --output_file, {outputPath: output_file},
      --, {inputValue: additional_args}
    ]
    
    fileOutputs:
      MLPipeline UI metadata: /tmp/mlpipeline-ui-metadata.json
      MLPipeline Metrics: /tmp/mlpipeline-metrics.json
