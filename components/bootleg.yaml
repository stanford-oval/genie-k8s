name: Bootleg
description: |
  Run a Bootleg model to extract and dump candidate features
inputs:
  - {name: image, description: ''}
  - {name: s3_bucket, description: ''}
  - {name: owner, description: ''}
  - {name: task_name, description: ''}
  - {name: project, description: ''}
  - {name: experiment, description: ''}
  - {name: eval_set, description: ''}
  - {name: s3_datadir, description: ''}
  - {name: s3_database_dir, description: ''}
  - {name: dataset_subfolder, description: ''}
  - {name: train_languages, description: ''}
  - {name: eval_languages, description: ''}
  - {name: bootleg_model, description: ''}
  - {name: additional_args, description: ''}
outputs:
  - {name: s3_bootleg_prepped_data}
implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c
    - |
      . /opt/genie-toolkit/lib.sh

      parse_args "$0" "image s3_bucket owner task_name project experiment eval_set s3_datadir s3_database_dir dataset_subfolder train_languages eval_languages s3_bootleg_prepped_data bootleg_model" "$@"
      shift $n 
      cd $HOME

      /opt/genie-toolkit/sync-repos.sh

      IFS='+' ; read -ra TLS <<<"$train_languages"; IFS=' '
      echo "${TLS[@]}"
      IFS='+'; read -ra ELS <<<"$eval_languages"; IFS=' '
      echo "${ELS[@]}"

      modeldir="$HOME/models/$bootleg_model"
      mkdir -p "$modeldir"

      if test "{s3_database_dir}" != None ; then
        aws s3 sync --no-progress ${s3_database_dir} ./database/ --exclude '*' --include '*es_material*' --include "*${bootleg_model}/*" --include '*emb_data*' --include '*wiki_entity_data*'
      fi

      mkdir -p cache

      if test "${dataset_subfolder}" = "None" ; then
        dataset_subfolder=
      fi

      case $task_name in
        *"multilingual"*)
          for lang in "${TLS[@]}" "${ELS[@]}" ; do
            aws s3 sync --no-progress ${s3_datadir}${dataset_subfolder} dataset/almond/multilingual --exclude "*/*" --include "*$lang*"
          done
        ;;

        *)
          aws s3 sync --no-progress --exclude "synthetic*.txt" --exclude "*bootleg*" ${s3_datadir}${dataset_subfolder} dataset/almond
        ;;
      esac

      genienlp bootleg-dump-features \
          --data "dataset" \
          --save "$modeldir" \
          --cache "$modeldir/cache" \
          --train_tasks ${task_name} \
          --preserve_case \
          --exist_ok \
          --skip_cache \
          --eval_set_name $eval_set \
          --train_languages $train_languages \
          --eval_languages $eval_languages \
          --database_dir ./database/ \
          --bootleg_model ${bootleg_model} \
          $@

      rm -fr "$modeldir/cache"
      rm -fr "$modeldir/dataset"

      S3_BOOTLEG_PREPPED_DATA=${s3_datadir}${dataset_subfolder}/bootleg/${bootleg_model}/prepped_files/
      aws s3 sync --no-progress results_temp ${S3_BOOTLEG_PREPPED_DATA}
            
      mkdir -p `dirname $s3_bootleg_prepped_data`
      echo ${S3_BOOTLEG_PREPPED_DATA} > $s3_bootleg_prepped_data
    
    args: [
      'cmd',
      --image, {inputValue: image},
      --s3_bucket, {inputValue: s3_bucket},
      --owner, {inputValue: owner},
      --task_name, {inputValue: task_name},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --eval_set, {inputValue: eval_set},
      --s3_datadir, {inputValue: s3_datadir},
      --s3_database_dir, {inputValue: s3_database_dir},
      --dataset_subfolder, {inputValue: dataset_subfolder},
      --s3_bootleg_prepped_data, {outputPath: s3_bootleg_prepped_data},
      --train_languages, {inputValue: train_languages},
      --eval_languages, {inputValue: eval_languages},
      --bootleg_model, {inputValue: bootleg_model},
      --,
      {inputValue: additional_args},
    ]
    
