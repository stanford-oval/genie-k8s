name: Merge
description: |
  Merge files
inputs:
  - {name: image, description: '', default: ''}
  - {name: task_name, description: '', default: ''}
  - {name: s3_datadir, description: '', default: ''}
  - {name: bootleg_model, description: '', default: ''}
  - {name: num_chunks, description: '', default: ''}
  - {name: eval_split_name, description: '', default: ''}
  - {name: remove_original, description: '', default: ''}

outputs:
  - {name: s3_output_datadir}

implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c
    - |
      . /opt/genie-toolkit/lib.sh
      parse_args "$0" "image task_name s3_datadir bootleg_model num_chunks eval_split_name remove_original s3_output_datadir" "$@"
      shift $n
      cd $HOME

      /opt/genie-toolkit/sync-repos.sh

      aws s3 sync --no-progress ${s3_datadir} dataset/

      mkdir -p dataset/merged
      cd dataset/

      ckpt_name=bootleg_wiki

      for ((i=0;i<$num_chunks;i++)); do
        cat $i/bootleg/${bootleg_model}/prepped_files/train_bootleg/${ckpt_name}/bootleg_labels.jsonl >> merged/train_bootleg_labels.jsonl
        cat $i/bootleg/${bootleg_model}/prepped_files/"$eval_split_name"_bootleg/${ckpt_name}/bootleg_labels.jsonl >> merged/"$eval_split_name"_bootleg_labels.jsonl
      done

      aws s3 cp --no-progress merged/train_bootleg_labels.jsonl ${s3_datadir}merged/bootleg/${bootleg_model}/prepped_files/train_bootleg/${ckpt_name}/bootleg_labels.jsonl
      aws s3 cp --no-progress merged/"$eval_split_name"_bootleg_labels.jsonl ${s3_datadir}merged/bootleg/${bootleg_model}/prepped_files/"$eval_split_name"_bootleg/${ckpt_name}/bootleg_labels.jsonl


      if [ "$remove_original" == "true" ] ; then
        aws s3 rm --recursive ${s3_datadir}
      fi

      mkdir -p `dirname $s3_output_datadir`
      echo ${s3_datadir}merged/bootleg/${bootleg_model}/prepped_files/ > $s3_output_datadir

    args: [
      'cmd',
      --image, {inputValue: image},
      --task_name, { inputValue: task_name },
      --s3_datadir, {inputValue: s3_datadir},
      --bootleg_model, {inputValue: bootleg_model},
      --num_chunks, {inputValue: num_chunks},
      --eval_split_name, {inputValue: eval_split_name},
      --remove_original, {inputValue: remove_original},
      --s3_output_datadir, {outputPath: s3_output_datadir},
    ]
