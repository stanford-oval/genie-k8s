name: Generate Paraphrases
description: |
  Automatic paraphrasing of a dataset (without filtering)
inputs:
  - {name: image, description: '', default: ''}
  - {name: s3_bucket, description: '', default: ''}
  - {name: owner, description: '', default: ''}
  - {name: task_name, description: '', default: '' }
  - {name: project, description: '', default: ''}
  - {name: experiment, description: '', default: ''}
  - {name: dataset, description: '', default: ''}
  - {name: s3_input_datadir, description: '', default: ''}
  - {name: paraphrasing_model, description: '', default: ''}
  - {name: keep_original_duplicates, description: '', default: ''}
  - {name: paraphrase_subfolder, description: '', default: ''}
  - {name: additional_args, description: '', default: ''}
outputs:
  - {name: s3_output_datadir}
implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -c
    - |
      . /opt/genie-toolkit/lib.sh

      parse_args "$0" "image s3_bucket owner task_name project experiment dataset s3_input_datadir s3_output_datadir paraphrasing_model keep_original_duplicates task_name paraphrase_subfolder" "$@"
      shift $n

      set -e
      set -x

      /opt/genie-toolkit/sync-repos.sh

      set +x
      keyctl session ; export AZCOPY_SPA_CLIENT_SECRET=${AZURE_SP_PASSWORD} ; azcopy login --service-principal --application-id ${AZURE_SP_APP_ID} --tenant-id ${AZURE_SP_TENANT_ID}
      set -x

      mkdir -p input_dataset
      azcopy sync --recursive --exclude-pattern "synthetic*.txt;*bootleg*;*chunked*" ${s3_bucket%/}/"${s3_input_datadir}" input_dataset/
      mkdir -p paraphraser
      azcopy sync --recursive --exclude-pattern "*checkpoint*" ${s3_bucket%/}/"${paraphrasing_model}" paraphraser/

      mkdir -p output_dataset
      cp -r input_dataset/* output_dataset

      s3_output_dir="${owner}/dataset/${project}/${experiment}/${dataset}-gen/`date +%s`/"

      mkdir -p `dirname $s3_output_datadir`
      echo ${s3_output_dir} > $s3_output_datadir

      paraphrasing_arguments="$@"

      case "$task_name" in
        "almond_dialogue_nlu" | "almond_dialogue_nlu_agent")
          is_dialogue=true
          input_dir="input_dataset/$paraphrase_subfolder"
          output_dir="output_dataset/$paraphrase_subfolder"
          ;;

        "almond")
          input_dir="input_dataset"
          output_dir="output_dataset"
          ;;

        *)
          echo "Error: invalid task name."
          exit 1
          ;;
      esac

      make join-results \
        keep_original_duplicates=${keep_original_duplicates} \
        input_dir=${input_dir} \
        output_dir=${output_dir} \
        task_name=${task_name} \
        paraphrasing_arguments="${paraphrasing_arguments}" \
        paraphraser_path=paraphraser

      # upload the new dataset to S3
      azcopy sync --recursive output_dataset/ "${s3_bucket%/}/${s3_output_dir}"

    args: [
      'cmd',
      --image, {inputValue: image},
      --s3_bucket, {inputValue: s3_bucket},
      --owner, {inputValue: owner},
      --task_name, {inputValue: task_name},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --dataset, {inputValue: dataset},
      --s3_input_datadir, {inputValue: s3_input_datadir},
      --s3_output_datadir, {outputPath: s3_output_datadir},
      --paraphrasing_model, {inputValue: paraphrasing_model},
      --keep_original_duplicates, {inputValue: keep_original_duplicates},
      --paraphrase_subfolder, {inputValue: paraphrase_subfolder},
      --, {inputValue: additional_args},
    ]
