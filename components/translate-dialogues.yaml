name: Translate Dialogues
description: |
  Translate dialogues using open-source NMTs
inputs:
  - {name: image, description: ''}
  - {name: project, description: ''}
  - {name: owner, description: ''}
  - {name: experiment, description: ''}
  - {name: s3_bucket, description: ''}
  - {name: translation_model, description: ''}
  - {name: input_splits, description: ''}
  - {name: nmt_id, description: ''}
  - {name: source, description: ''}
  - {name: src_lang, description: ''}
  - {name: tgt_lang, description: ''}
  - {name: prepare_for_translation, description: ''}
  - {name: do_translation, description: ''}
  - {name: post_process_translation, description: ''}
  - {name: s3_datadir, description: ''}
  - {name: additional_args, description: ''}
outputs:
  - {name: s3_output_datadir}

implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c
    - |
      . /opt/genie-toolkit/lib.sh

      parse_args "$0" "image owner project experiment s3_bucket translation_model input_splits nmt_id source src_lang tgt_lang prepare_for_translation do_translation post_process_translation s3_datadir s3_output_datadir" "$@"
      shift $n

      . /opt/genie-toolkit/sync-repos.sh

      cd $HOME

      if [ -f workdir/Makefile ] ; then
        MAKEDIR='.'
      else
        MAKEDIR=${project}
      fi

      cat >> workdir/config.mk <<EOF
      developer_key = ${THINGPEDIA_DEVELOPER_KEY}
      EOF
      cd workdir/${MAKEDIR}

      S3_OUTPUT_DATADIR=${s3_datadir}translated/
      mkdir -p `dirname $s3_output_datadir`
      echo ${S3_OUTPUT_DATADIR} > $s3_output_datadir

      aws s3 sync --no-progress ${s3_datadir} datadir/ --exclude "synthetic*.txt" --exclude "*bootleg*" --exclude "*chunked*"

      # prepare for translation
      if ${prepare_for_translation}; then
        make \
          geniedir=/opt/genie-toolkit \
          genie_k8s_owner=${owner} \
          genie_k8s_project=${project} \
          s3_bucket=${s3_bucket} \
          source=${source} \
          all_names="${input_splits}" \
          experiment=${experiment} \
          $@ \
          process_data
        aws s3 sync --no-progress ./eval/${experiment}/ ${s3_datadir}translated/
      fi

      # translate
      if ${do_translation}; then
        make \
          geniedir=/opt/genie-toolkit \
          genienlpdir=/opt/genienlp \
          genie_k8s_owner=${owner} \
          genie_k8s_project=${project} \
          s3_bucket=${s3_bucket} \
          source=${source} \
          all_names="${input_splits}" \
          experiment=${experiment} \
          src_lang=${src_lang} \
          tgt_lang=${tgt_lang} \
          nmt_model=${nmt_id} \
          model_name_or_path=${translation_model} \
          $@ translate_data
        aws s3 sync --no-progress ./eval/${experiment}/ ${s3_datadir}translated/
      fi

      # further process the translated files
      if ${post_process_translation}; then
        make \
          geniedir=/opt/genie-toolkit \
          genie_k8s_owner=${owner} \
          genie_k8s_project=${project} \
          s3_bucket=${s3_bucket} \
          source=${source} \
          all_names="${input_splits}" \
          experiment=${experiment} \
          src_lang=${src_lang} \
          tgt_lang=${tgt_lang} \
          nmt_model=${nmt_id} \
          $@ postprocess_data
        aws s3 sync --no-progress ./eval/${experiment}/ ${s3_datadir}translated/

        # sync final data to main directory since almond_dialogue_* task expects the data there
        aws s3 sync --no-progress ${s3_datadir}translated/${source}/${nmt_id}/${tgt_lang}/final/ ${s3_datadir}translated/${source}/
      fi

    args: [
      'cmd',
      --image, {inputValue: image},
      --owner, {inputValue: owner},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --s3_bucket, {inputValue: s3_bucket},
      --translation_model, {inputValue: translation_model},
      --input_splits, {inputValue: input_splits},
      --nmt_id, {inputValue: nmt_id},
      --source, {inputValue: source},
      --src_lang, {inputValue: src_lang},
      --tgt_lang, {inputValue: tgt_lang},
      --prepare_for_translation, {inputValue: prepare_for_translation},
      --do_translation, {inputValue: do_translation},
      --post_process_translation, {inputValue: post_process_translation},
      --s3_datadir, {inputValue: s3_datadir},
      --s3_output_datadir, {outputPath: s3_output_datadir},
      --, {inputValue: additional_args}
    ]
