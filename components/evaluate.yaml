name: Eval
description: |
  Evaluate
inputs:
  - {name: image, description: '', default: ''}
  - {name: project, description: '', default: ''}
  - {name: owner, description: '', default: ''}
  - {name: experiment, description: '', default: ''}
  - {name: model, description: '', default: ''}
  - {name: model_owner, description: '', default: ''}
  - {name: eval_set, description: '', default: ''}
  - {name: s3_model_dir, description: '', default: ''}
  - {name: s3_database_dir, description: '', default: ''}
  - {name: bootleg_model, description: ''}
  - {name: additional_args, description: '', default: ''}
outputs:
  - {name: metrics_output}
  - {name: s3_metrics_output}
  - {name: MLPipeline UI metadata, type: UI metadata}
  - {name: MLPipeline Metrics, type: Metrics}
implementation:
  container:
    image: '{{inputs.parameters.image}}'
    command:
    - /bin/bash
    - -ex
    - -c 
    - |
      . /opt/genie-toolkit/lib.sh
      parse_args "$0" "image project owner experiment model model_owner eval_set s3_model_dir s3_database_dir bootleg_model s3_metrics_output metrics_output" "$@"
      shift $n
      cd $HOME

      /opt/genie-toolkit/sync-repos.sh
      MAKEDIR=`get_make_dir ${project}`
      cat >> workdir/config.mk <<EOF
      developer_key = ${THINGPEDIA_DEVELOPER_KEY}
      EOF
      cd workdir/${MAKEDIR}

      if test "${s3_database_dir}" != None ; then
        aws s3 sync --no-progress ${s3_database_dir} ./database/ --exclude '*'  --include '*type2id.json' --include '*pretrained_bert_models*' --include '*entity_mappings/config.json' --include '*entity_mappings/qid2title.json' --include '*entity_mappings/qid2eid.json' --include '*canonical2type.json' --include '*es_*.json' --include '*wikidatatitle_to_typeid_0905.json' --include '*wikidataqid_to_bootlegtypeid.json' --include '*entityQID_to_wikidataTypeQID.json' --include '*alias2qids_wiki*' --include "*${bootleg_model}/*.json" --include "*${bootleg_model}/*.pt"
      fi

      ls -al 
      mkdir tmp
      MODEL_DIR=${model_owner}/${model}

      export TZ=America/Los_Angeles
      export GENIENLP_DATABASE_DIR=./database/

      make -j2 \
        geniedir=/opt/genie-toolkit \
        "owner=${owner}" \
        "genie_k8s_owner=${owner}" \
        "genie_k8s_project=${project}" \
        "s3_bucket=geniehai" \
        thingpedia_cli=thingpedia \
        "experiment=$experiment" \
        "eval_set=${eval_set}" \
        "model=${MODEL_DIR}" \
        "s3_model_dir=${s3_model_dir}" \
        "metrics_output=${metrics_output}" \
        "s3_metrics_output=${s3_metrics_output}" \
        evaluate
      make \
        geniedir=/opt/genie-toolkit \
        "owner=${owner}" \
        "genie_k8s_owner=${owner}" \
        "genie_k8s_project=${project}" \
        "s3_bucket=geniehai" \
        thingpedia_cli=thingpedia \
        "experiment=$experiment" \
        "eval_set=${eval_set}" \
        "model=${MODEL_DIR}" \
        "s3_model_dir=${s3_model_dir}" \
        "metrics_output=${metrics_output}" \
        "s3_metrics_output=${s3_metrics_output}" \
        evaluate-output-artifacts

    args: [
      'cmd',
      --image, {inputValue: image},
      --owner, {inputValue: owner},
      --project, {inputValue: project},
      --experiment, {inputValue: experiment},
      --model, {inputValue: model},
      --model_owner, {inputValue: model_owner},
      --eval_set, {inputValue: eval_set},
      --s3_model_dir, {inputValue: s3_model_dir},
      --s3_database_dir, {inputValue: s3_database_dir},
      --bootleg_model, { inputValue: bootleg_model },
      --s3_metrics_output, {outputPath: s3_metrics_output},
      --metrics_output, {outputPath: metrics_output},
      --, {inputValue: additional_args}
    ]

    fileOutputs:
      MLPipeline UI metadata: /tmp/mlpipeline-ui-metadata.json
      MLPipeline Metrics: /tmp/mlpipeline-metrics.json
